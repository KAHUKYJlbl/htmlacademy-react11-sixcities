{"version":3,"file":"static/js/274.786f91ef.chunk.js","mappings":"yMAQe,SAASA,EAAqBC,GAAgE,IAA9DC,EAAiBD,EAAjBC,kBACvCC,EAAiBC,OAAOC,KAAKH,GAEnC,OACEI,EAAAA,EAAAA,KAAA,MAAIC,UAAU,kBAAiBC,SAC5BL,EAAeM,KAAI,SAACC,GAAI,OACvBC,EAAAA,EAAAA,MAAA,MAAeJ,UAAU,6BAA4BC,SAAA,EACnDF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oDAAmDC,UAChEF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,kBAAiBC,UAC9BF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,uBAAuBK,KAAK,IAAGJ,UAC1CF,EAAAA,EAAAA,KAAA,QAAAE,SAAOE,WAIbJ,EAAAA,EAAAA,KAACO,EAAAA,EAAa,CACZC,OAAQZ,EAAkBQ,GAC1BK,cAAe,YACfC,0BAA2B,CAAC,yBAXvBN,EAaJ,KAIb,C,4CC7BaO,EAAoB,SAACC,GAAkB,OAClDA,EAAUC,QAA0B,SAACC,EAAKC,GAMxC,OALID,EAAIC,EAAQX,KAAKY,MACnBF,EAAIC,EAAQX,KAAKY,MAAMC,KAAKF,GAE5BD,EAAIC,EAAQX,KAAKY,MAAQ,CAACD,GAErBD,CACT,GAAG,CAAC,EAAE,E,UCER,SAASI,IACP,OACEb,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,4BAA2BC,SAAA,EACxCF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,oBAAmBC,SAAC,wBACjCF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,gCAA+BC,SAAC,uEAGnD,CAEe,SAASiB,IACtB,IAAMC,GAAiBC,EAAAA,EAAAA,GAAeC,EAAAA,IAChCC,GAAyBF,EAAAA,EAAAA,GAAeG,EAAAA,IACxCC,GAAWC,EAAAA,EAAAA,KAMjB,OAJAC,EAAAA,EAAAA,YAAU,WACRF,GAASG,EAAAA,EAAAA,KACX,GAAG,CAACH,IAEAF,EAAuBM,WAClB7B,EAAAA,EAAAA,KAAC8B,EAAAA,EAAc,CAACC,YAAY,SAGjCR,EAAuBS,UAClBhC,EAAAA,EAAAA,KAACiC,EAAAA,EAAI,CAACC,KAAK,eAIlBlC,EAAAA,EAAAA,KAACmC,EAAAA,EAAM,CAACC,UAAQ,EAACC,aAAW,EAAAnC,UAC1BF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,mCAAkCC,UAChDF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,sCAAqCC,UAClDG,EAAAA,EAAAA,MAAA,WAASJ,UAAU,YAAWC,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,mBAAkBC,SAAC,kBAE/BkB,EAAekB,OAAS,GACpBtC,EAAAA,EAAAA,KAACN,EAAqB,CAACE,kBAAmBe,EAAkBS,MAC5DpB,EAAAA,EAAAA,KAACkB,EAAc,YAOjC,C","sources":["components/place-card-list-by-cities/place-card-list-by-cities.tsx","utils/offers-by-cities.ts","pages/favorites/favorites.tsx"],"sourcesContent":["import PlaceCardList from '../place-card-list/place-card-list';\n\nimport { FavoritesByCities } from '../../types/offer/offer';\n\ntype PlaceCardListByCitiesProps = {\n  favoritesByCities: FavoritesByCities;\n}\n\nexport default function PlaceCardListByCities({favoritesByCities}: PlaceCardListByCitiesProps): JSX.Element {\n  const favoriteCities = Object.keys(favoritesByCities);\n\n  return (\n    <ul className=\"favorites__list\">\n      {favoriteCities.map((city) => (\n        <li key={city} className=\"favorites__locations-items\">\n          <div className=\"favorites__locations locations locations--current\">\n            <div className=\"locations__item\">\n              <a className=\"locations__item-link\" href=\"#\">\n                <span>{city}</span>\n              </a>\n            </div>\n          </div>\n          <PlaceCardList\n            offers={favoritesByCities[city]}\n            placeCardType={'favorites'}\n            placeCardContainerClasses={['favorites__places']}\n          />\n        </li>\n      ))}\n    </ul>\n  );\n}\n","import { FavoritesByCities, Offer } from '../types/offer/offer';\n\nexport const getOffersByCities = (favorites: Offer[]) => (\n  favorites.reduce<FavoritesByCities>((acc, current) => {\n    if (acc[current.city.name]) {\n      acc[current.city.name].push(current);\n    } else {\n      acc[current.city.name] = [current];\n    }\n    return acc;\n  }, {})\n);\n","import { useEffect } from 'react';\n\nimport Layout from '../../components/layout/layout';\nimport LoadingSpinner from '../../components/loading-spinner/loading-spinner';\nimport PlaceCardListByCities from '../../components/place-card-list-by-cities/place-card-list-by-cities';\nimport { useAppSelector } from '../../hooks/store-hooks/use-app-selector';\nimport { useAppDispatch } from '../../hooks/store-hooks/use -app-dispatch';\nimport { getFavorites, getFavoritesLoadingStatus } from '../../store/favorites/selectors';\nimport { fetchFavorites } from '../../store/favorites/api-actions';\nimport { getOffersByCities } from '../../utils/offers-by-cities';\nimport Oops from '../../components/oops/oops';\n\nfunction EmptyFavorites() {\n  return (\n    <div className=\"favorites__status-wrapper\">\n      <b className=\"favorites__status\">Nothing yet saved.</b>\n      <p className=\"favorites__status-description\">Save properties to narrow down search or plan your future trips.</p>\n    </div>\n  );\n}\n\nexport default function Favorites(): JSX.Element {\n  const favoriteOffers = useAppSelector(getFavorites);\n  const favoritesLoadingStatus = useAppSelector(getFavoritesLoadingStatus);\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    dispatch(fetchFavorites());\n  }, [dispatch]);\n\n  if (favoritesLoadingStatus.isLoading) {\n    return <LoadingSpinner spinnerType='page' />;\n  }\n\n  if (favoritesLoadingStatus.isFailed) {\n    return <Oops type='favorites' />;\n  }\n\n  return (\n    <Layout isFooter isHeaderNav>\n      <main className=\"page__main page__main--favorites\">\n        <div className=\"page__favorites-container container\">\n          <section className=\"favorites\">\n            <h1 className=\"favorites__title\">Saved listing</h1>\n            {\n              favoriteOffers.length > 0\n                ? <PlaceCardListByCities favoritesByCities={getOffersByCities(favoriteOffers)} />\n                : <EmptyFavorites />\n            }\n          </section>\n        </div>\n      </main>\n    </Layout>\n  );\n}\n"],"names":["PlaceCardListByCities","_ref","favoritesByCities","favoriteCities","Object","keys","_jsx","className","children","map","city","_jsxs","href","PlaceCardList","offers","placeCardType","placeCardContainerClasses","getOffersByCities","favorites","reduce","acc","current","name","push","EmptyFavorites","Favorites","favoriteOffers","useAppSelector","getFavorites","favoritesLoadingStatus","getFavoritesLoadingStatus","dispatch","useAppDispatch","useEffect","fetchFavorites","isLoading","LoadingSpinner","spinnerType","isFailed","Oops","type","Layout","isFooter","isHeaderNav","length"],"sourceRoot":""}